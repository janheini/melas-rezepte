---
import BaseLayout from "../layouts/BaseLayout.astro";
import { tags } from "../content/config.ts";
import Filter from "../components/filter.astro";
import RecipeList from "../components/recipe_list.astro";
import { getCollection } from "astro:content";

async function getRecipes(filters: Array<FormDataEntryValue> = []) {
    let rezepte = await getCollection("rezepte");

    for (const filter of filters) {
        const f = tags.parse(filter);
        rezepte = rezepte.filter(
            (rezept) => rezept.data.tags && rezept.data.tags.indexOf(f) > -1,
        );
    }

    return rezepte.map((rezept) => ({
        title: rezept.data.title,
        slug: rezept.slug,
    }));
}

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const filters = formData.getAll("filter");
    const rezepte = await getRecipes(filters);
    return new Response(
        rezepte
            .map(
                // so the problem ist with htmx I need to return a 'string' of
                // html like this
                // but astro won't render a string as html for obvious reasons
                // that's why we need this twice
                (rezept) => `
                    <li>
                        <a href="rezepte/${rezept.slug}/"
                            class="no-underline hover:underline">
                            ${rezept.title}
                        </a>
                    </li>
                `,
            )
            .join(""),
    );
}

const rezepte = await getRecipes();
---

<BaseLayout>
    <div class="prose">
        <form hx-target="#rezepte" class="flex flex-wrap gap-5 gap-y-6">
            {tags.options.map((tag) => <Filter tag={tag} />)}
        </form>
        <ul id="rezepte" class="list-disc p-4">
            {
                rezepte.map((rezept) => (
                    <li>
                        <a
                            href="rezepte/{rezept.slug}/"
                            class="no-underline hover:underline"
                        >
                            {rezept.title}
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</BaseLayout>
