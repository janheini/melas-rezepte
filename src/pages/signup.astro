---
import BaseLayout from "../layouts/BaseLayout.astro";
import { auth } from "../lib/lucia";

if (import.meta.env.PROD) {
    return new Response(null, {
        status: 404,
        statusText: "Not found",
    });
}

let usernameInput = "";
let errorMessage = "";

// check for form submissions
if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const username = formData.get("username");
    const password = formData.get("password");
    if (typeof username === "string") {
        usernameInput = username;
    }
    // basic check
    const validUsername =
        typeof username === "string" &&
        username.length >= 4 &&
        username.length <= 31;
    const validPassword =
        typeof password === "string" &&
        password.length >= 6 &&
        password.length <= 255;
    if (validUsername && validPassword) {
        try {
            const user = await auth.createUser({
                key: {
                    providerId: "username", // auth method
                    providerUserId: username.toLowerCase(), // unique id when using "username" auth method
                    password, // hashed by Lucia
                },
                attributes: {
                    username,
                },
            });
            const session = await auth.createSession({
                userId: user.userId,
                attributes: {},
            });
            Astro.locals.auth.setSession(session); // set session cookie
            return Astro.redirect("/", 302); // redirect to profile page
        } catch (e) {
            // this part depends on the database you're using
            // check for unique constraint error in user table
            // if (e instanceof SqliteError && e.code === "SQLITE_CONSTRAINT_UNIQUE") {
            // 	errorMessage = "Username already taken";
            // 	Astro.response.status = 400;
            // } else {
            errorMessage = "An unknown error occurred";
            Astro.response.status = 500;
            // }
        }
    } else {
        errorMessage = "Invalid input";
        Astro.response.status = 400;
    }
}

const session = await Astro.locals.auth.validate();
if (session) return Astro.redirect("/", 302); // redirect to profile page
---

<BaseLayout>
    <h2 class="pb-2 font-black">Create new account</h2>
    <form class="grid max-w-xs gap-2" method="post">
        <input
            id="username"
            name="username"
            type="text"
            class="input input-bordered input-sm"
            placeholder="username"
        />
        <input
            id="password"
            name="password"
            type="password"
            class="input input-bordered input-sm"
            placeholder="password"
        />
        <input
            type="submit"
            class="btn btn-outline btn-sm"
            value="Create account"
        />
        <a class="btn btn-outline btn-sm" href="/login"> Login instead</a>
    </form>
    {
        errorMessage && (
            <div class="py-4">
                <div class="alert alert-error max-w-xs">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-6 w-6 shrink-0 stroke-current"
                        fill="none"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
                        />
                    </svg>
                    <span>{errorMessage}</span>
                </div>
            </div>
        )
    }
</BaseLayout>
